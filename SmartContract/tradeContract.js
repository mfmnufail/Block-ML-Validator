const HDWalletProvider = require("@truffle/hdwallet-provider");
const Web3 = require('web3');
// const {interface, bytecode} = require('./compile');

const MNEMONIC = "eb46b71fe25dbc9ace12b3037baefcb324527cce15119c96efb43d44c42aa9b5";

const provider = new HDWalletProvider(MNEMONIC, "https://ropsten.infura.io/v3/501f614a8a344b9d81f6561446bc3a85");
let biddingTime = 500
// let abi = [{'inputs': [{'internalType': 'uint256', 'name': 'biddingTime', 'type': 'uint256'}, {'internalType': 'address payable', 'name': 'beneficiaryAddress', 'type': 'address'}], 'stateMutability': 'nonpayable', 'type': 'constructor'}, {'inputs': [], 'name': 'AuctionAlreadyEnded', 'type': 'error'}, {'inputs': [], 'name': 'AuctionEndAlreadyCalled', 'type': 'error'}, {'inputs': [], 'name': 'AuctionNotYetEnded', 'type': 'error'}, {'inputs': [{'internalType': 'uint256', 'name': 'highestBid', 'type': 'uint256'}], 'name': 'BidNotHighEnough', 'type': 'error'}, {'anonymous': false, 'inputs': [{'indexed': false, 'internalType': 'address', 'name': 'winner', 'type': 'address'}, {'indexed': false, 'internalType': 'uint256', 'name': 'amount', 'type': 'uint256'}], 'name': 'auctionEnded', 'type': 'event'}, {'anonymous': false, 'inputs': [{'indexed': false, 'internalType': 'address', 'name': 'bidder', 'type': 'address'}, {'indexed': false, 'internalType': 'uint256', 'name': 'amount', 'type': 'uint256'}], 'name': 'highestBidIncreased', 'type': 'event'}, {'inputs': [], 'name': 'auction', 'outputs': [], 'stateMutability': 'nonpayable', 'type': 'function'}, {'inputs': [], 'name': 'auctionEndTime', 'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [], 'name': 'beneficiary', 'outputs': [{'internalType': 'address payable', 'name': '', 'type': 'address'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [], 'name': 'bid', 'outputs': [], 'stateMutability': 'payable', 'type': 'function'}, {'inputs': [], 'name': 'highestBidder', 'outputs': [{'internalType': 'address', 'name': '', 'type': 'address'}], 'stateMutability': 'view', 'type': 'function'}, {'inputs': [], 'name': 'widraw', 'outputs': [{'internalType': 'bool', 'name': '', 'type': 'bool'}], 'stateMutability': 'nonpayable', 'type': 'function'}]
let abi = [{'inputs': [{'internalType': 'address payable',
'name': 'Owner',
'type': 'address'}],
'stateMutability': 'nonpayable',
'type': 'constructor'},
{'anonymous': false,
'inputs': [{'indexed': true,
'internalType': 'address',
'name': '_highestBidder',
'type': 'address'},
{'indexed': false,
'internalType': 'uint256',
'name': '_highestBid',
'type': 'uint256'}],
'name': 'LogBid',
'type': 'event'},
{'anonymous': false,
'inputs': [{'indexed': true,
'internalType': 'address',
'name': '_withdrawer',
'type': 'address'},
{'indexed': false,
'internalType': 'uint256',
'name': 'amount',
'type': 'uint256'}],
'name': 'LogWithdrawal',
'type': 'event'},
{'inputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}],
'name': 'addressBids',
'outputs': [{'internalType': 'address', 'name': '', 'type': 'address'}],
'stateMutability': 'view',
'type': 'function'},
{'inputs': [{'internalType': 'address', 'name': '', 'type': 'address'}],
'name': 'bids',
'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}],
'stateMutability': 'view',
'type': 'function'},
{'inputs': [],
'name': 'currentCar',
'outputs': [{'internalType': 'string', 'name': 'make', 'type': 'string'},
{'internalType': 'string', 'name': 'model', 'type': 'string'},
{'internalType': 'string', 'name': 'year', 'type': 'string'},
{'internalType': 'string', 'name': 'colour', 'type': 'string'}],
'stateMutability': 'view',
'type': 'function'},
{'inputs': [],
'name': 'endAuction',
'outputs': [],
'stateMutability': 'nonpayable',
'type': 'function'},
{'inputs': [],
'name': 'endTime',
'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}],
'stateMutability': 'view',
'type': 'function'},
{'inputs': [],
'name': 'fetchCurrentCarDetails',
'outputs': [{'components': [{'internalType': 'string',
  'name': 'make',
  'type': 'string'},
 {'internalType': 'string', 'name': 'model', 'type': 'string'},
 {'internalType': 'string', 'name': 'year', 'type': 'string'},
 {'internalType': 'string', 'name': 'colour', 'type': 'string'}],
'internalType': 'struct Auction.Car',
'name': '',
'type': 'tuple'}],
'stateMutability': 'view',
'type': 'function'},
{'inputs': [],
'name': 'fetchEndTime',
'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}],
'stateMutability': 'view',
'type': 'function'},
{'inputs': [],
'name': 'fetchHighestBid',
'outputs': [{'components': [{'internalType': 'uint256',
  'name': 'bidAmount',
  'type': 'uint256'},
 {'internalType': 'address', 'name': 'bidder', 'type': 'address'}],
'internalType': 'struct Auction.HighestBid',
'name': '',
'type': 'tuple'}],
'stateMutability': 'view',
'type': 'function'},
{'inputs': [],
'name': 'fetchTimeDifference',
'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}],
'stateMutability': 'view',
'type': 'function'},
{'inputs': [],
'name': 'getOwner',
'outputs': [{'internalType': 'address', 'name': '', 'type': 'address'}],
'stateMutability': 'view',
'type': 'function'},
{'inputs': [],
'name': 'highestBid',
'outputs': [{'internalType': 'uint256',
'name': 'bidAmount',
'type': 'uint256'},
{'internalType': 'address', 'name': 'bidder', 'type': 'address'}],
'stateMutability': 'view',
'type': 'function'},
{'inputs': [],
'name': 'makeBid',
'outputs': [{'internalType': 'bool', 'name': '', 'type': 'bool'}],
'stateMutability': 'payable',
'type': 'function'},
{'inputs': [],
'name': 'owner',
'outputs': [{'internalType': 'address payable',
'name': '',
'type': 'address'}],
'stateMutability': 'view',
'type': 'function'},
{'inputs': [],
'name': 'startTime',
'outputs': [{'internalType': 'uint256', 'name': '', 'type': 'uint256'}],
'stateMutability': 'view',
'type': 'function'},
{'inputs': [],
'name': 'withdraw',
'outputs': [{'internalType': 'bool', 'name': '', 'type': 'bool'}],
'stateMutability': 'nonpayable',
'type': 'function'}]
//  let bytecode = "608060405234801561001057600080fd5b5060405161096b38038061096b83398181016040528101906100329190610124565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550814261007e9190610193565b60018190555050506101e9565b600080fd5b6000819050919050565b6100a381610090565b81146100ae57600080fd5b50565b6000815190506100c08161009a565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100f1826100c6565b9050919050565b610101816100e6565b811461010c57600080fd5b50565b60008151905061011e816100f8565b92915050565b6000806040838503121561013b5761013a61008b565b5b6000610149858286016100b1565b925050602061015a8582860161010f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061019e82610090565b91506101a983610090565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156101de576101dd610164565b5b828201905092915050565b610773806101f86000396000f3fe6080604052600436106100555760003560e01c80631998aeef1461005a57806338af3eed146100645780634b449cba1461008f5780637d9f6db5146100ba57806391f90157146100d1578063b77745ea146100fc575b600080fd5b610062610127565b005b34801561007057600080fd5b506100796102b3565b60405161008691906105ce565b60405180910390f35b34801561009b57600080fd5b506100a46102d7565b6040516100b19190610602565b60405180910390f35b3480156100c657600080fd5b506100cf6102dd565b005b3480156100dd57600080fd5b506100e6610443565b6040516100f3919061063e565b60405180910390f35b34801561010857600080fd5b50610111610469565b60405161011e9190610674565b60405180910390f35b600154421115610163576040517fd02e774d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60035434116101ab576003546040517f4e12c1bb0000000000000000000000000000000000000000000000000000000081526004016101a29190610602565b60405180910390fd5b6000600354146102305760035460046000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461022891906106be565b925050819055505b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346003819055507fd8f1dcefca138e7252b01cd1477fab84d8763d9b0c50b16805e3190c1c393a3433346040516102a9929190610714565b60405180910390a1565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600154421015610319576040517f44cee29000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600560009054906101000a900460ff1615610360576040517f61cfdcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600560006101000a81548160ff0219169083151502179055507f6e0e2174dbf7b77c08b6f9a2799b9feda84a6d54a5644864582040100a47d4c5600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003546040516103d0929190610714565b60405180910390a160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6003549081150290604051600060405180830381858888f19350505050158015610440573d6000803e3d6000fd5b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811115610584576000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050506105835780600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600091505061058a565b5b60019150505b90565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105b88261058d565b9050919050565b6105c8816105ad565b82525050565b60006020820190506105e360008301846105bf565b92915050565b6000819050919050565b6105fc816105e9565b82525050565b600060208201905061061760008301846105f3565b92915050565b60006106288261058d565b9050919050565b6106388161061d565b82525050565b6000602082019050610653600083018461062f565b92915050565b60008115159050919050565b61066e81610659565b82525050565b60006020820190506106896000830184610665565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106c9826105e9565b91506106d4836105e9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156107095761070861068f565b5b828201905092915050565b6000604082019050610729600083018561062f565b61073660208301846105f3565b939250505056fea2646970667358221220258b6e91d71d9916906ded3f2a3fb894eaba20ed24f6417a4a5393ebaccb71e464736f6c634300080c003300000000000000000000000000000000000000000000000000000000000001f4000000000000000000000000ffa5ac27dc08fa6e4bd85fbbc89ea63048e797aa"
let bytecode = "60806040523480156200001157600080fd5b5060405162001bf938038062001bf98339818101604052810190620000379190620002f9565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555042600181905550610e10426200008e919062000364565b6002819055506040518060400160405280600581526020017f416375726100000000000000000000000000000000000000000000000000000081525060056000019080519060200190620000e4929190620001df565b506040518060400160405280600381526020017f43535800000000000000000000000000000000000000000000000000000000008152506005600101908051906020019062000135929190620001df565b506040518060400160405280600481526020017f32303038000000000000000000000000000000000000000000000000000000008152506005600201908051906020019062000186929190620001df565b506040518060400160405280600581526020017f426c61636b00000000000000000000000000000000000000000000000000000081525060056003019080519060200190620001d7929190620001df565b505062000426565b828054620001ed90620003f0565b90600052602060002090601f0160209004810192826200021157600085556200025d565b82601f106200022c57805160ff19168380011785556200025d565b828001600101855582156200025d579182015b828111156200025c5782518255916020019190600101906200023f565b5b5090506200026c919062000270565b5090565b5b808211156200028b57600081600090555060010162000271565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002c18262000294565b9050919050565b620002d381620002b4565b8114620002df57600080fd5b50565b600081519050620002f381620002c8565b92915050565b6000602082840312156200031257620003116200028f565b5b60006200032284828501620002e2565b91505092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000371826200032b565b91506200037e836200032b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620003b657620003b562000335565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200040957607f821691505b6020821081141562000420576200041f620003c1565b5b50919050565b6117c380620004366000396000f3fe6080604052600436106100e85760003560e01c8063893d20e81161008a578063f30e365811610059578063f30e3658146102ee578063f373c4631461030c578063f8db841414610337578063fe67a54b14610362576100e8565b8063893d20e8146102415780638da5cb5b1461026c578063ab4fc4b614610297578063d57bde79146102c2576100e8565b80633197cbb6116100c65780633197cbb6146101835780633ccfd60b146101ae57806362ea82db146101d957806378e9792514610216576100e8565b806320627c6a146100ed57806329af11bf146101185780632ed416bd14610146575b600080fd5b3480156100f957600080fd5b50610102610379565b60405161010f919061108e565b60405180910390f35b34801561012457600080fd5b5061012d6105e1565b60405161013d94939291906110fa565b60405180910390f35b34801561015257600080fd5b5061016d60048036038101906101689190611196565b61081f565b60405161017a9190611204565b60405180910390f35b34801561018f57600080fd5b5061019861085e565b6040516101a5919061122e565b60405180910390f35b3480156101ba57600080fd5b506101c3610864565b6040516101d09190611264565b60405180910390f35b3480156101e557600080fd5b5061020060048036038101906101fb91906112ab565b610b21565b60405161020d919061122e565b60405180910390f35b34801561022257600080fd5b5061022b610b39565b604051610238919061122e565b60405180910390f35b34801561024d57600080fd5b50610256610b3f565b6040516102639190611204565b60405180910390f35b34801561027857600080fd5b50610281610b68565b60405161028e91906112f9565b60405180910390f35b3480156102a357600080fd5b506102ac610b8c565b6040516102b9919061122e565b60405180910390f35b3480156102ce57600080fd5b506102d7610b96565b6040516102e5929190611314565b60405180910390f35b6102f6610bc8565b6040516103039190611264565b60405180910390f35b34801561031857600080fd5b50610321610e1b565b60405161032e919061138a565b60405180910390f35b34801561034357600080fd5b5061034c610e9b565b604051610359919061122e565b60405180910390f35b34801561036e57600080fd5b50610377610eb7565b005b610381610f25565b600060056040518060800160405290816000820180546103a0906113d4565b80601f01602080910402602001604051908101604052809291908181526020018280546103cc906113d4565b80156104195780601f106103ee57610100808354040283529160200191610419565b820191906000526020600020905b8154815290600101906020018083116103fc57829003601f168201915b50505050508152602001600182018054610432906113d4565b80601f016020809104026020016040519081016040528092919081815260200182805461045e906113d4565b80156104ab5780601f10610480576101008083540402835291602001916104ab565b820191906000526020600020905b81548152906001019060200180831161048e57829003601f168201915b505050505081526020016002820180546104c4906113d4565b80601f01602080910402602001604051908101604052809291908181526020018280546104f0906113d4565b801561053d5780601f106105125761010080835404028352916020019161053d565b820191906000526020600020905b81548152906001019060200180831161052057829003601f168201915b50505050508152602001600382018054610556906113d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610582906113d4565b80156105cf5780601f106105a4576101008083540402835291602001916105cf565b820191906000526020600020905b8154815290600101906020018083116105b257829003601f168201915b50505050508152505090508091505090565b60058060000180546105f2906113d4565b80601f016020809104026020016040519081016040528092919081815260200182805461061e906113d4565b801561066b5780601f106106405761010080835404028352916020019161066b565b820191906000526020600020905b81548152906001019060200180831161064e57829003601f168201915b505050505090806001018054610680906113d4565b80601f01602080910402602001604051908101604052809291908181526020018280546106ac906113d4565b80156106f95780601f106106ce576101008083540402835291602001916106f9565b820191906000526020600020905b8154815290600101906020018083116106dc57829003601f168201915b50505050509080600201805461070e906113d4565b80601f016020809104026020016040519081016040528092919081815260200182805461073a906113d4565b80156107875780601f1061075c57610100808354040283529160200191610787565b820191906000526020600020905b81548152906001019060200180831161076a57829003601f168201915b50505050509080600301805461079c906113d4565b80601f01602080910402602001604051908101604052809291908181526020018280546107c8906113d4565b80156108155780601f106107ea57610100808354040283529160200191610815565b820191906000526020600020905b8154815290600101906020018083116107f857829003601f168201915b5050505050905084565b6004818154811061082f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b60006002544210156108ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a290611452565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610939576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610930906114be565b60405180910390fd5b60006009600001549050600060036000600960010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600960010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060096000018190555060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682604051610a449061150f565b60006040518083038185875af1925050503d8060008114610a81576040519150601f19603f3d011682016040523d82523d6000602084013e610a86565b606091505b5050905080610aca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac190611570565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167fb4214c8c54fc7442f36d3682f59aebaf09358a4431835b30efb29d52cf9e1e9183604051610b10919061122e565b60405180910390a260019250505090565b60036020528060005260406000206000915090505481565b60015481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600254905090565b60098060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b60006002544210610c0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c05906115dc565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610c9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9490611648565b60405180910390fd5b600034600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610cea9190611697565b90506009600001548111610d33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2a90611739565b60405180910390fd5b33600960010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060096000018190555080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167f5331b3a4532c2507900f549683f076c051f92222c177b52f82f140d8667d3ebf82604051610e0b919061122e565b60405180910390a2600191505090565b610e23610f4d565b60006009604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090508091505090565b600080600154600254610eae9190611759565b90508091505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6009600001549081150290604051600060405180830381858888f19350505050158015610f22573d6000803e3d6000fd5b50565b6040518060800160405280606081526020016060815260200160608152602001606081525090565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600081519050919050565b600082825260208201905092915050565b60005b83811015610fb7578082015181840152602081019050610f9c565b83811115610fc6576000848401525b50505050565b6000601f19601f8301169050919050565b6000610fe882610f7d565b610ff28185610f88565b9350611002818560208601610f99565b61100b81610fcc565b840191505092915050565b600060808301600083015184820360008601526110338282610fdd565b9150506020830151848203602086015261104d8282610fdd565b915050604083015184820360408601526110678282610fdd565b915050606083015184820360608601526110818282610fdd565b9150508091505092915050565b600060208201905081810360008301526110a88184611016565b905092915050565b600082825260208201905092915050565b60006110cc82610f7d565b6110d681856110b0565b93506110e6818560208601610f99565b6110ef81610fcc565b840191505092915050565b6000608082019050818103600083015261111481876110c1565b9050818103602083015261112881866110c1565b9050818103604083015261113c81856110c1565b9050818103606083015261115081846110c1565b905095945050505050565b600080fd5b6000819050919050565b61117381611160565b811461117e57600080fd5b50565b6000813590506111908161116a565b92915050565b6000602082840312156111ac576111ab61115b565b5b60006111ba84828501611181565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111ee826111c3565b9050919050565b6111fe816111e3565b82525050565b600060208201905061121960008301846111f5565b92915050565b61122881611160565b82525050565b6000602082019050611243600083018461121f565b92915050565b60008115159050919050565b61125e81611249565b82525050565b60006020820190506112796000830184611255565b92915050565b611288816111e3565b811461129357600080fd5b50565b6000813590506112a58161127f565b92915050565b6000602082840312156112c1576112c061115b565b5b60006112cf84828501611296565b91505092915050565b60006112e3826111c3565b9050919050565b6112f3816112d8565b82525050565b600060208201905061130e60008301846112ea565b92915050565b6000604082019050611329600083018561121f565b61133660208301846111f5565b9392505050565b61134681611160565b82525050565b611355816111e3565b82525050565b604082016000820151611371600085018261133d565b506020820151611384602085018261134c565b50505050565b600060408201905061139f600083018461135b565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806113ec57607f821691505b60208210811415611400576113ff6113a5565b5b50919050565b7f546869732061756374696f6e206973207374696c6c206f70656e000000000000600082015250565b600061143c601a836110b0565b915061144782611406565b602082019050919050565b6000602082019050818103600083015261146b8161142f565b9050919050565b7f4f6e6c79206f776e65722063616e20706572666f726d207461736b2e00000000600082015250565b60006114a8601c836110b0565b91506114b382611472565b602082019050919050565b600060208201905081810360008301526114d78161149b565b9050919050565b600081905092915050565b50565b60006114f96000836114de565b9150611504826114e9565b600082019050919050565b600061151a826114ec565b9150819050919050565b7f5769746864726177616c206661696c65642e0000000000000000000000000000600082015250565b600061155a6012836110b0565b915061156582611524565b602082019050919050565b600060208201905081810360008301526115898161154d565b9050919050565b7f546869732061756374696f6e20697320636c6f7365642e000000000000000000600082015250565b60006115c66017836110b0565b91506115d182611590565b602082019050919050565b600060208201905081810360008301526115f5816115b9565b9050919050565b7f4f776e6572206973206e6f7420616c6c6f77656420746f206269640000000000600082015250565b6000611632601b836110b0565b915061163d826115fc565b602082019050919050565b6000602082019050818103600083015261166181611625565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116a282611160565b91506116ad83611160565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156116e2576116e1611668565b5b828201905092915050565b7f426964206572726f723a204d616b65206120686967686572204269642e000000600082015250565b6000611723601d836110b0565b915061172e826116ed565b602082019050919050565b6000602082019050818103600083015261175281611716565b9050919050565b600061176482611160565b915061176f83611160565b92508282101561178257611781611668565b5b82820390509291505056fea2646970667358221220fde882b0443427cb66439bddded8bb42e7493a642c2936262d3e3b178811691064736f6c634300080c0033"
const web3 = new Web3(provider);


const deploy = async () => {
    const accounts = ['0x7EC3c07b764b284f0CF91DFEa88EA810F059b18C'];
    let beneficiaryAddress = accounts[0];
    console.log(accounts);
    console.log('Attempting to deploy from account >>> ', accounts[0]);


    const result =  await new web3.eth.Contract(JSON.parse(JSON.stringify(abi)))
    .deploy({data:bytecode, arguments:[beneficiaryAddress]})
    .send({gas:'5000000', from: accounts[0]},(err,transactionHash)=>{
        console.log("transaction hash >>> " + transactionHash)
    })

        console.log('To address >>> ', result.options.address);

        /*NORMAL TRANSATION*/
    // web3.eth.accounts.signTransaction({gas:'1000000',code:result}, '0x' + MNEMONIC)
    // .then(console.log);

};
deploy();