const HDWalletProvider = require("@truffle/hdwallet-provider");
const Web3 = require('web3');
// const {interface, bytecode} = require('./compile');




    
        


    // const MNEMONIC = "eb46b71fe25dbc9ace12b3037baefcb324527cce15119c96efb43d44c42aa9b5";
    
     
    // let biddingTime = 1000
    // let blockHash = "foidasjf3j43oi2j4i323j2o4k"
    // let ipfsHash = "ipfsoidasjf3j43oi2j4i323j2o4k"
    
   let  abi = [
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "biddingTime",
                    "type": "uint256"
                },
                {
                    "internalType": "string",
                    "name": "transacHash",
                    "type": "string"
                },
                {
                    "internalType": "string",
                    "name": "ipfsHashs",
                    "type": "string"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "AuctionAlreadyEnded",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "AuctionEndAlreadyCalled",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "AuctionNotYetEnded",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "highestBid",
                    "type": "uint256"
                }
            ],
            "name": "BidNotHighEnough",
            "type": "error"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "winner",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "auctionEnded",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "bidder",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "highestBidIncreased",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "allBidders",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "auctionEnd",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "auctionEndTime",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "bid",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "dataSeller",
            "outputs": [
                {
                    "internalType": "address payable",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fetchHighestBidder",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fetchIpfsHash",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fetchTransactionHash",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getOwner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "highestBidder",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "ipfsHash",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "transactionHash",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "widraw",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ]
    
    let  bytecode = "60806040526000600960006101000a81548160ff0219169083151502179055503480156200002c57600080fd5b5060405162001b7838038062001b78833981810160405281019062000052919062000369565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508242620000a0919062000432565b6001819055508160029080519060200190620000be929190620000e1565b508060039080519060200190620000d7929190620000e1565b50505050620004f4565b828054620000ef90620004be565b90600052602060002090601f0160209004810192826200011357600085556200015f565b82601f106200012e57805160ff19168380011785556200015f565b828001600101855582156200015f579182015b828111156200015e57825182559160200191906001019062000141565b5b5090506200016e919062000172565b5090565b5b808211156200018d57600081600090555060010162000173565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b620001ba81620001a5565b8114620001c657600080fd5b50565b600081519050620001da81620001af565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200023582620001ea565b810181811067ffffffffffffffff82111715620002575762000256620001fb565b5b80604052505050565b60006200026c62000191565b90506200027a82826200022a565b919050565b600067ffffffffffffffff8211156200029d576200029c620001fb565b5b620002a882620001ea565b9050602081019050919050565b60005b83811015620002d5578082015181840152602081019050620002b8565b83811115620002e5576000848401525b50505050565b600062000302620002fc846200027f565b62000260565b905082815260208101848484011115620003215762000320620001e5565b5b6200032e848285620002b5565b509392505050565b600082601f8301126200034e576200034d620001e0565b5b815162000360848260208601620002eb565b91505092915050565b6000806000606084860312156200038557620003846200019b565b5b60006200039586828701620001c9565b935050602084015167ffffffffffffffff811115620003b957620003b8620001a0565b5b620003c78682870162000336565b925050604084015167ffffffffffffffff811115620003eb57620003ea620001a0565b5b620003f98682870162000336565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200043f82620001a5565b91506200044c83620001a5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111562000484576200048362000403565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620004d757607f821691505b60208210811415620004ee57620004ed6200048f565b5b50919050565b61167480620005046000396000f3fe6080604052600436106100c25760003560e01c8063893d20e81161007f578063b6e04ff711610059578063b6e04ff714610227578063b77745ea14610252578063c2efcff51461027d578063c623674f146102a8576100c2565b8063893d20e81461019457806391f90157146101bf578063a013781b146101ea576100c2565b80630ac1c313146100c75780631998aeef146100f25780632a24f46c146100fc5780633949e71c146101135780634b449cba1461013e57806365cfde5d14610169575b600080fd5b3480156100d357600080fd5b506100dc6102d3565b6040516100e99190611053565b60405180910390f35b6100fa610361565b005b34801561010857600080fd5b5061011161068a565b005b34801561011f57600080fd5b50610128610a35565b60405161013591906110b6565b60405180910390f35b34801561014a57600080fd5b50610153610ab5565b60405161016091906110ea565b60405180910390f35b34801561017557600080fd5b5061017e610abb565b60405161018b9190611053565b60405180910390f35b3480156101a057600080fd5b506101a9610c33565b6040516101b691906110b6565b60405180910390f35b3480156101cb57600080fd5b506101d4610c5c565b6040516101e191906110b6565b60405180910390f35b3480156101f657600080fd5b50610211600480360381019061020c9190611136565b610c82565b60405161021e91906110b6565b60405180910390f35b34801561023357600080fd5b5061023c610cc1565b6040516102499190611053565b60405180910390f35b34801561025e57600080fd5b50610267610d53565b604051610274919061117e565b60405180910390f35b34801561028957600080fd5b50610292610f08565b60405161029f91906111ba565b60405180910390f35b3480156102b457600080fd5b506102bd610f2c565b6040516102ca9190611053565b60405180910390f35b600280546102e090611204565b80601f016020809104026020016040519081016040528092919081815260200182805461030c90611204565b80156103595780601f1061032e57610100808354040283529160200191610359565b820191906000526020600020905b81548152906001019060200180831161033c57829003601f168201915b505050505081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156103f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e790611282565b60405180910390fd5b6001544210610434576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042b906112ee565b60405180910390fd5b60001515600960009054906101000a900460ff1615151461048a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048190611380565b60405180910390fd5b60055434116104d2576005546040517f4e12c1bb0000000000000000000000000000000000000000000000000000000081526004016104c991906110ea565b60405180910390fd5b6000600554146105575760055460086000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461054f91906113cf565b925050819055505b33600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346005819055506006600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600760055490806001815401808255809150506001900390600052602060002001600090919091909150557fd8f1dcefca138e7252b01cd1477fab84d8763d9b0c50b16805e3190c1c393a343334604051610680929190611425565b60405180910390a1565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610718576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070f9061149a565b60405180910390fd5b6001600960006101000a81548160ff0219169083151502179055507f6e0e2174dbf7b77c08b6f9a2799b9feda84a6d54a5644864582040100a47d4c5600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600554604051610788929190611425565b60405180910390a160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6005549081150290604051600060405180830381858888f193505050501580156107f8573d6000803e3d6000fd5b5060005b600160068054905061080e91906114ba565b811015610a32576000600860006006848154811061082f5761082e6114ee565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811115610a1e57600060086000600685815481106108ba576108b96114ee565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060068281548110610937576109366114ee565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050610a1d578060086000600685815481106109b3576109b26114ee565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b5b508080610a2a9061151d565b9150506107fc565b50565b600060011515600960009054906101000a900460ff16151514610a8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a84906115b2565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60015481565b60603373ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b449061161e565b60405180910390fd5b60011515600960009054906101000a900460ff16151514610ba3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9a906115b2565b60405180910390fd5b60038054610bb090611204565b80601f0160208091040260200160405190810160405280929190818152602001828054610bdc90611204565b8015610c295780601f10610bfe57610100808354040283529160200191610c29565b820191906000526020600020905b815481529060010190602001808311610c0c57829003601f168201915b5050505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60068181548110610c9257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606060028054610cd090611204565b80601f0160208091040260200160405190810160405280929190818152602001828054610cfc90611204565b8015610d495780601f10610d1e57610100808354040283529160200191610d49565b820191906000526020600020905b815481529060010190602001808311610d2c57829003601f168201915b5050505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610de5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ddc90611282565b60405180910390fd5b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811115610eff576000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050610efe5780600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000915050610f05565b5b60019150505b90565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60038054610f3990611204565b80601f0160208091040260200160405190810160405280929190818152602001828054610f6590611204565b8015610fb25780601f10610f8757610100808354040283529160200191610fb2565b820191906000526020600020905b815481529060010190602001808311610f9557829003601f168201915b505050505081565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ff4578082015181840152602081019050610fd9565b83811115611003576000848401525b50505050565b6000601f19601f8301169050919050565b600061102582610fba565b61102f8185610fc5565b935061103f818560208601610fd6565b61104881611009565b840191505092915050565b6000602082019050818103600083015261106d818461101a565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110a082611075565b9050919050565b6110b081611095565b82525050565b60006020820190506110cb60008301846110a7565b92915050565b6000819050919050565b6110e4816110d1565b82525050565b60006020820190506110ff60008301846110db565b92915050565b600080fd5b611113816110d1565b811461111e57600080fd5b50565b6000813590506111308161110a565b92915050565b60006020828403121561114c5761114b611105565b5b600061115a84828501611121565b91505092915050565b60008115159050919050565b61117881611163565b82525050565b6000602082019050611193600083018461116f565b92915050565b60006111a482611075565b9050919050565b6111b481611199565b82525050565b60006020820190506111cf60008301846111ab565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061121c57607f821691505b602082108114156112305761122f6111d5565b5b50919050565b7f4f776e6572206973206e6f7420616c6c6f77656420746f206269640000000000600082015250565b600061126c601b83610fc5565b915061127782611236565b602082019050919050565b6000602082019050818103600083015261129b8161125f565b9050919050565b7f5468652061756374696f6e20697320616c726561647920656e64656400000000600082015250565b60006112d8601c83610fc5565b91506112e3826112a2565b602082019050919050565b60006020820190508181036000830152611307816112cb565b9050919050565b7f5468652061756374696f6e20697320656e646564206279207468652053656c6c60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b600061136a602283610fc5565b91506113758261130e565b604082019050919050565b600060208201905081810360008301526113998161135d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113da826110d1565b91506113e5836110d1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561141a576114196113a0565b5b828201905092915050565b600060408201905061143a60008301856110a7565b61144760208301846110db565b9392505050565b7f4f6e6c79206f776e65722063616e20706572666f726d207461736b2e00000000600082015250565b6000611484601c83610fc5565b915061148f8261144e565b602082019050919050565b600060208201905081810360008301526114b381611477565b9050919050565b60006114c5826110d1565b91506114d0836110d1565b9250828210156114e3576114e26113a0565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611528826110d1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561155b5761155a6113a0565b5b600182019050919050565b7f546869732061756374696f6e206973207374696c6c206f70656e000000000000600082015250565b600061159c601a83610fc5565b91506115a782611566565b602082019050919050565b600060208201905081810360008301526115cb8161158f565b9050919050565b7f596f7520617265206e6f74207468652068696768657374206269646465720000600082015250565b6000611608601e83610fc5565b9150611613826115d2565b602082019050919050565b60006020820190508181036000830152611637816115fb565b905091905056fea264697066735822122060a5741f936d2badd483279639a21825de84522006cee698bb4cf917f16d031d64736f6c634300080c0033"
    
     
    
     
     const deploy = async({MNEMONIC,account, biddingTime,blockHash,ipfsHash}) => {

        // let MNEMONIC = MNEMONIC;
        // let account = account
        // let biddingTime = biddingTime;
        // let blockHash = blockHash;
        // let ipfsHash = ipfsHash;
        let provider = new HDWalletProvider(MNEMONIC, "https://ropsten.infura.io/v3/501f614a8a344b9d81f6561446bc3a85");
        let web3 = new Web3(provider);
        // console.log("provider"+ this.provider )
        // const accounts = ['0x7EC3c07b764b284f0CF91DFEa88EA810F059b18C'];

        let transactionHashValue = "";


        let beneficiaryAddress = account;
        // console.log(accounts);
        console.log('Attempting to deploy from account >>> ',beneficiaryAddress);


        
    
        const result =  await new web3.eth.Contract(JSON.parse(JSON.stringify(abi)))
        .deploy({data:bytecode, arguments:[biddingTime,blockHash,ipfsHash]})
        .send({gas:'9000000', from: account},(err,transactionHash)=>{
            console.log("transaction hash >>> " + transactionHash)
            transactionHashValue = transactionHash;
        })
    
            console.log('To address >>> ', result.options.address);
    
            /*NORMAL TRANSATION*/
        // web3.eth.accounts.signTransaction({gas:'1000000',code:result}, '0x' + MNEMONIC)
        // .then(console.log);

        return {publickey:account, blockHash:blockHash, transactionHash:transactionHashValue, contractAddress:result.options.address, startTime:Date.now(), biddingTime: biddingTime }
    
    }


// deploy();


module.exports = {deploy}